{"version":3,"sources":["webpack:///./src/components/NewsEntry.tsx","webpack:///./src/components/News.tsx","webpack:///./src/pages/index.tsx"],"names":["StyledNewsEntry","Object","styled_base_browser_esm","target","mixins","StyledHeader","name","styles","StyledSubHeader","components_NewsEntry","_ref","author","title","birthTime","children","timestamp","Date","toLocaleDateString","core_browser_esm","StyledNews","components_News","gatsby_browser_entry","query","render","data","allFile","edges","map","edge","node","childMarkdownRemark","frontmatter","modifiedTime","rehype","htmlAst","_2651076963","__webpack_exports__","layouts","Page","Container"],"mappings":"kLAKMA,EAAeC,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,WACRA,OAAAG,EAAA,EAAAH,CAAU,IADF,aAETA,OAAAG,EAAA,EAAAH,CAAU,IAFD,uBAGFA,OAAAG,EAAA,EAAAH,CAAU,IAHR,4EAYfI,EAAYJ,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAK,KAAA,SAAAC,OAAA,qCAKZC,EAAeP,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAK,KAAA,UAAAC,OAAA,oDA0BrBE,EAb6C,SAAAC,GAA4C,IAAzCC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,SAClEC,EAAY,IAAIC,KAAKH,GAAWI,qBACtC,OACEhB,OAAAiB,EAAA,EAAAjB,CAACD,EAAD,KACEC,OAAAiB,EAAA,EAAAjB,CAACI,EAAD,KAAeO,GACfX,OAAAiB,EAAA,EAAAjB,CAACO,EAAD,KACGO,EADH,SACoBJ,GAEnBG,ICpCDK,EAAUlB,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAK,KAAA,UAAAC,OAAA,4EA+DhBa,EAtC4B,kBAC1BnB,OAAAiB,EAAA,EAAAjB,CAACoB,EAAA,YAAD,CACEC,MAAK,aAmBLC,OAAQ,SAACC,GAAD,OACNvB,OAAAiB,EAAA,EAAAjB,CAACkB,EAAD,KACGK,EAAKC,QAAQC,MAAMC,IAAI,SAAAC,GAAI,OAC1B3B,OAAAiB,EAAA,EAAAjB,CAACQ,EAAD,CACEE,OAAQiB,EAAKC,KAAKC,oBAAoBC,YAAYpB,OAClDC,MAAOgB,EAAKC,KAAKC,oBAAoBC,YAAYnB,MACjDC,UAAWe,EAAKC,KAAKhB,UACrBmB,aAAcJ,EAAKC,KAAKG,cAEvB/B,OAAAgC,EAAA,EAAAhC,CAAU2B,EAAKC,KAAKC,oBAAoBI,cA7BnDV,KAAAW,cCRFC,EAAA,QAlBkB,kBAChBnC,OAAAiB,EAAA,EAAAjB,CAACoC,EAAA,EAAD,KACEpC,OAAAiB,EAAA,EAAAjB,CAACqC,EAAA,EAAD,KACErC,OAAAiB,EAAA,EAAAjB,CAACsC,EAAA,EAAD,KACEtC,OAAAiB,EAAA,EAAAjB,CAAA,mBACAA,OAAAiB,EAAA,EAAAjB,CAAA,gUAMFA,OAAAiB,EAAA,EAAAjB,CAACsC,EAAA,EAAD,KACEtC,OAAAiB,EAAA,EAAAjB,CAACmB,EAAD","file":"component---src-pages-index-tsx-0eb2bafe888b81ba9907.js","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledNewsEntry = styled.div`\n  padding: ${getEmSize(24)}em;\n  margin: ${getEmSize(32)}rem 0;\n  border-radius: ${getEmSize(12)}em;\n  background-color: lightgrey;\n  color: black;\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst StyledHeader = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n`\n\nconst StyledSubHeader = styled.div`\n  font-size: 0.8rem;\n  color: grey;\n  margin-bottom: 1rem;\n`\n\ninterface NewsEntryProps {\n  author: string\n  title: string\n  birthTime: string\n  modifiedTime: string\n}\n\nconst NewsEntry: React.SFC<NewsEntryProps> = ({ author, title, birthTime, children }) => {\n  const timestamp = new Date(birthTime).toLocaleDateString()\n  return (\n    <StyledNewsEntry>\n      <StyledHeader>{title}</StyledHeader>\n      <StyledSubHeader>\n        {timestamp} - by {author}\n      </StyledSubHeader>\n      {children}\n    </StyledNewsEntry>\n  )\n}\n\nexport default NewsEntry\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport { renderAst } from '../utils/rehype'\nimport NewsEntry from './NewsEntry'\n\nconst StyledNews = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 3rem;\n`\n\ntype StaticQueryProps = {\n  allFile: {\n    edges: {\n      node: {\n        childMarkdownRemark: {\n          htmlAst: string\n          frontmatter: {\n            author: string\n            title: string\n          }\n        }\n        birthTime: string\n        modifiedTime: string\n      }\n    }[]\n  }\n}\n\nconst News: React.SFC<{}> = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexPageQuery {\n        allFile(filter: { sourceInstanceName: { eq: \"news\" } }, sort: { fields: [birthTime], order: DESC }) {\n          edges {\n            node {\n              childMarkdownRemark {\n                htmlAst\n                frontmatter {\n                  author\n                  title\n                }\n              }\n              birthTime\n              modifiedTime\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <StyledNews>\n        {data.allFile.edges.map(edge => (\n          <NewsEntry\n            author={edge.node.childMarkdownRemark.frontmatter.author}\n            title={edge.node.childMarkdownRemark.frontmatter.title}\n            birthTime={edge.node.birthTime}\n            modifiedTime={edge.node.modifiedTime}\n          >\n            {renderAst(edge.node.childMarkdownRemark.htmlAst)}\n          </NewsEntry>\n        ))}\n      </StyledNews>\n    )}\n  />\n)\n\nexport default News\n","import * as React from 'react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport News from '../components/News'\nimport IndexLayout from '../layouts'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Net64</h1>\n        <p>\n          Net64 is a modification for everyones favourite 3D Mario: Super Mario 64. Cooperate with your friends to collect all 120 stars and\n          show Bowser who's boss - or just beat each other up. The modification consists of a separate application that establishes a\n          connection between Super Mario 64 and the internet.\n        </p>\n      </Container>\n      <Container>\n        <News />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}