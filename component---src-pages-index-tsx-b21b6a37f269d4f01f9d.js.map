{"version":3,"sources":["webpack:///./src/components/DownloadButton.tsx","webpack:///./src/components/NewsEntry.tsx","webpack:///./src/components/News.tsx","webpack:///./src/pages/index.tsx"],"names":["DownloadButton_DownloadButton","DownloadButton","props","_this","_React$PureComponent","call","this","state","to","componentDidMount","getGithubReleases","releases","release","isReleaseValid","console","log","assets","asset","name","includes","downloadUrl","browser_download_url","setState","render","Object","core_browser_esm","Button","img","draft","prerelease","length","tag_name","axios_default","a","request","method","url","timeout","data","react","StyledNewsEntry","styled_base_browser_esm","target","mixins","StyledHeader","styles","StyledSubHeader","components_NewsEntry","_ref","author","title","birthTime","children","timestamp","Date","toLocaleDateString","StyledNews","components_News","gatsby_browser_entry","query","allFile","edges","map","edge","node","childMarkdownRemark","frontmatter","modifiedTime","key","rehype","htmlAst","_2651076963","__webpack_exports__","layouts","Page","Container"],"mappings":"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","file":"component---src-pages-index-tsx-b21b6a37f269d4f01f9d.js","sourcesContent":["import * as React from 'react'\nimport axios from 'axios'\n\nimport Button from './Button'\n\ninterface Asset {\n  browser_download_url: string\n  name: string\n}\n\ninterface Release {\n  draft: boolean\n  prerelease: boolean\n  assets: Asset[]\n  tag_name: string\n  body: string\n}\n\ninterface DownloadButtonState {\n  to: string\n}\n\nexport default class DownloadButton extends React.PureComponent<{}, DownloadButtonState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      to: 'https://github.com/tarnadas/net64plus/releases'\n    }\n  }\n\n  public async componentDidMount() {\n    const releases = await this.getGithubReleases()\n    for (const release of releases) {\n      if (!this.isReleaseValid(release)) continue\n      console.log('VALID', release)\n      for (const asset of release.assets) {\n        if (asset.name == null || !asset.name.includes('64plus')) continue\n        const downloadUrl = asset.browser_download_url\n        if (!downloadUrl) continue\n        this.setState({\n          to: downloadUrl\n        })\n      }\n    }\n  }\n\n  public render() {\n    const { to } = this.state\n    return (\n      <Button to={to} img=\"net64.svg\">\n        Download Net64+\n      </Button>\n    )\n  }\n\n  private isReleaseValid(release: Release): boolean {\n    if (release.draft == null || release.draft) return false\n    if (release.prerelease == null || release.prerelease) return false\n    if (release.assets == null || release.assets.length === 0) return false\n    if (!release.tag_name) return false\n    return true\n  }\n\n  private async getGithubReleases() {\n    return (await axios.request<Release[]>({\n      method: 'get',\n      url: 'https://api.github.com/repos/tarnadas/net64plus/releases',\n      timeout: 10000\n    })).data\n  }\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledNewsEntry = styled.div`\n  padding: ${getEmSize(24)}em;\n  margin: ${getEmSize(32)}rem 0;\n  border-radius: ${getEmSize(12)}em;\n  background-color: lightgrey;\n  color: black;\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst StyledHeader = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n`\n\nconst StyledSubHeader = styled.div`\n  font-size: 0.8rem;\n  color: grey;\n  margin-bottom: 1rem;\n`\n\ninterface NewsEntryProps {\n  author: string\n  title: string\n  birthTime: string\n  modifiedTime: string\n}\n\nconst NewsEntry: React.SFC<NewsEntryProps> = ({ author, title, birthTime, children }) => {\n  const timestamp = new Date(birthTime).toLocaleDateString()\n  return (\n    <StyledNewsEntry>\n      <StyledHeader>{title}</StyledHeader>\n      <StyledSubHeader>\n        {timestamp} - by {author}\n      </StyledSubHeader>\n      {children}\n    </StyledNewsEntry>\n  )\n}\n\nexport default NewsEntry\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport { renderAst } from '../utils/rehype'\nimport NewsEntry from './NewsEntry'\n\nconst StyledNews = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 3rem;\n`\n\ntype StaticQueryProps = {\n  allFile: {\n    edges: {\n      node: {\n        childMarkdownRemark: {\n          htmlAst: string\n          frontmatter: {\n            author: string\n            title: string\n          }\n        }\n        birthTime: string\n        modifiedTime: string\n      }\n    }[]\n  }\n}\n\nconst News: React.SFC<{}> = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexPageQuery {\n        allFile(filter: { sourceInstanceName: { eq: \"news\" } }, sort: { fields: [birthTime], order: DESC }) {\n          edges {\n            node {\n              childMarkdownRemark {\n                htmlAst\n                frontmatter {\n                  author\n                  title\n                }\n              }\n              birthTime\n              modifiedTime\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <StyledNews>\n        {data.allFile.edges.map(edge => (\n          <NewsEntry\n            author={edge.node.childMarkdownRemark.frontmatter.author}\n            title={edge.node.childMarkdownRemark.frontmatter.title}\n            birthTime={edge.node.birthTime}\n            modifiedTime={edge.node.modifiedTime}\n            key={`${edge.node.birthTime}.${edge.node.childMarkdownRemark.frontmatter.title}`}\n          >\n            {renderAst(edge.node.childMarkdownRemark.htmlAst)}\n          </NewsEntry>\n        ))}\n      </StyledNews>\n    )}\n  />\n)\n\nexport default News\n","import * as React from 'react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport DownloadButton from '../components/DownloadButton'\nimport News from '../components/News'\nimport IndexLayout from '../layouts'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Net64</h1>\n        <p>\n          Net64 is a modification for everyones favourite 3D Mario: Super Mario 64. Cooperate with your friends to collect all 120 stars and\n          show Bowser who's boss - or just beat each other up. The modification consists of a separate application that establishes a\n          connection between Super Mario 64 and the internet.\n        </p>\n        <DownloadButton />\n      </Container>\n      <Container>\n        <News />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}